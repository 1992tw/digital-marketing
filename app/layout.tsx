import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
 import Header from '../components/Header'; 

import React from 'react';
import { AuthProvider } from '../context/AuthContext'; // Adjust the path as necessary


const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <AuthProvider>
    <html lang="en">
      <head> <link
          href="https://fonts.googleapis.com/css2?family=Lobster&display=swap"
          rel="stylesheet"
        /></head>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased relative min-h-screen`}>
        
        {/* Background SVG Animation */}
        <div id="bg-wrap" className="absolute inset-0 z-0">
          <svg viewBox="0 0 100 100" preserveAspectRatio="xMidYMid slice" className="w-full h-full">
            <defs>
              <radialGradient id="Gradient1" cx="50%" cy="50%" fx="0.441602%" fy="50%" r=".5">
                <animate attributeName="fx" dur="34s" values="0%;3%;0%" repeatCount="indefinite"></animate>
                <stop offset="0%" stopColor="rgba(255, 0, 255, 1)"></stop>
                <stop offset="100%" stopColor="rgba(255, 0, 255, 0)"></stop>
              </radialGradient>
              <radialGradient id="Gradient2" cx="50%" cy="50%" fx="2.68147%" fy="50%" r=".5">
                <animate attributeName="fx" dur="23.5s" values="0%;3%;0%" repeatCount="indefinite"></animate>
                <stop offset="0%" stopColor="rgba(255, 255, 0, 1)"></stop>
                <stop offset="100%" stopColor="rgba(255, 255, 0, 0)"></stop>
              </radialGradient>
              <radialGradient id="Gradient3" cx="50%" cy="50%" fx="0.836536%" fy="50%" r=".5">
                <animate attributeName="fx" dur="21.5s" values="0%;3%;0%" repeatCount="indefinite"></animate>
                <stop offset="0%" stopColor="rgba(0, 255, 255, 1)"></stop>
                <stop offset="100%" stopColor="rgba(0, 255, 255, 0)"></stop>
              </radialGradient>
              <radialGradient id="Gradient4" cx="50%" cy="50%" fx="4.56417%" fy="50%" r=".5">
                <animate attributeName="fx" dur="23s" values="0%;5%;0%" repeatCount="indefinite"></animate>
                <stop offset="0%" stopColor="rgba(0, 255, 0, 1)"></stop>
                <stop offset="100%" stopColor="rgba(0, 255, 0, 0)"></stop>
              </radialGradient>
              <radialGradient id="Gradient5" cx="50%" cy="50%" fx="2.65405%" fy="50%" r=".5">
                <animate attributeName="fx" dur="24.5s" values="0%;5%;0%" repeatCount="indefinite"></animate>
                <stop offset="0%" stopColor="rgba(0,0,255, 1)"></stop>
                <stop offset="100%" stopColor="rgba(0,0,255, 0)"></stop>
              </radialGradient>
              <radialGradient id="Gradient6" cx="50%" cy="50%" fx="0.981338%" fy="50%" r=".5">
                <animate attributeName="fx" dur="25.5s" values="0%;5%;0%" repeatCount="indefinite"></animate>
                <stop offset="0%" stopColor="rgba(255,0,0, 1)"></stop>
                <stop offset="100%" stopColor="rgba(255,0,0, 0)"></stop>
              </radialGradient>
            </defs>
            <rect x="13.744%" y="1.18473%" width="100%" height="100%" fill="url(#Gradient1)" transform="rotate(334.41 50 50)">
              <animate attributeName="x" dur="20s" values="25%;0%;25%" repeatCount="indefinite"></animate>
              <animate attributeName="y" dur="21s" values="0%;25%;0%" repeatCount="indefinite"></animate>
              <animateTransform attributeName="transform" type="rotate" from="0 50 50" to="360 50 50" dur="7s" repeatCount="indefinite"></animateTransform>
            </rect>
            {/* Add remaining rects here */}
          </svg>
        </div>
        
        {/* Main Content */}
        <main className="relative z-10 flex flex-col items-center justify-center min-h-screen">
          {/* Uncomment if using Header */}
          <Header />
          {children}
        </main>
      </body>
    </html>
    </AuthProvider>
  );
}
